{"ts":1356126896713,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"<html>\r\n\r\n<head>\r\n<title>Learning WebGL &mdash; Lessons 1</title>\r\n<meta http-equiv=\"content-type\" content=\"text/html; charset=ISO-8859-1\">\r\n\r\n<script type=\"text/javascript\" src=\"glMatrix.js\"></script>\r\n\r\n<script id=\"shader-fs\" type=\"x-shader/x-fragment\">\r\n  precision mediump float;\r\n\r\n  void main(void) {\r\n    gl_FragColor = vec4(1.0, 1.0, 1.0, 1.0);\r\n  }\r\n</script>\r\n\r\n<script id=\"shader-vs\" type=\"x-shader/x-vertex\">\r\n  attribute vec3 aVertexPosition;\r\n\r\n  uniform mat4 uMVMatrix;\r\n  uniform mat4 uPMatrix;\r\n\r\n  void main(void) {\r\n    gl_Position = uPMatrix * uMVMatrix * vec4(aVertexPosition, 1.0);\r\n  }\r\n</script>\r\n\r\n<script type=\"text/javascript\">\r\n  var gl;\r\n  function initGL(canvas) {\r\n    try {\r\n      gl = canvas.getContext(\"experimental-webgl\");\r\n      gl.viewportWidth = canvas.width;\r\n      gl.viewportHeight = canvas.height;\r\n    } catch (e) {}\r\n    \r\n    if (!gl) {\r\n        alert(\"Could not initialise WebGL, sorry :-(\");\r\n    }\r\n  }\r\n\r\n  function getShader(gl, id) {\r\n    var shaderScript = document.getElementById(id);\r\n    if (!shaderScript) {\r\n        return null;\r\n    }\r\n\r\n    var str = \"\";\r\n    var k = shaderScript.firstChild;\r\n    while (k) {\r\n        if (k.nodeType == 3) {\r\n            str += k.textContent;\r\n        }\r\n        k = k.nextSibling;\r\n    }\r\n\r\n    var shader;\r\n    if (shaderScript.type == \"x-shader/x-fragment\") {\r\n        shader = gl.createShader(gl.FRAGMENT_SHADER);\r\n    } else if (shaderScript.type == \"x-shader/x-vertex\") {\r\n        shader = gl.createShader(gl.VERTEX_SHADER);\r\n    } else {\r\n        return null;\r\n    }\r\n\r\n    gl.shaderSource(shader, str);\r\n    gl.compileShader(shader);\r\n\r\n    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\r\n        alert(gl.getShaderInfoLog(shader));\r\n        return null;\r\n    }\r\n\r\n    return shader;\r\n  }\r\n\r\n  var shaderProgram;\r\n\r\n  function initShaders() {\r\n    var fragmentShader = getShader(gl, \"shader-fs\");\r\n    var vertexShader   = getShader(gl, \"shader-vs\");\r\n\r\n    shaderProgram = gl.createProgram();\r\n    gl.attachShader(shaderProgram, vertexShader);\r\n    gl.attachShader(shaderProgram, fragmentShader);\r\n    gl.linkProgram(shaderProgram);\r\n\r\n    if (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS)) {\r\n        alert(\"Could not initialise shaders\");\r\n    }\r\n\r\n    gl.useProgram(shaderProgram);\r\n\r\n    shaderProgram.vertexPositionAttribute = gl.getAttribLocation(shaderProgram, \"aVertexPosition\");\r\n    gl.enableVertexAttribArray(shaderProgram.vertexPositionAttribute);\r\n\r\n    shaderProgram.pMatrixUniform  = gl.getUniformLocation(shaderProgram, \"uPMatrix\");\r\n    shaderProgram.mvMatrixUniform = gl.getUniformLocation(shaderProgram, \"uMVMatrix\");\r\n  }\r\n\r\n  var mvMatrix = mat4.create();\r\n  var pMatrix  = mat4.create();\r\n\r\n  function setMatrixUniforms() {\r\n      gl.uniformMatrix4fv(shaderProgram.pMatrixUniform, false, pMatrix);\r\n      gl.uniformMatrix4fv(shaderProgram.mvMatrixUniform, false, mvMatrix);\r\n  }\r\n\r\n  var triangleVertexPositionBuffer;\r\n  var squareVertexPositionBuffer;\r\n\r\n  function initBuffers() {\r\n    triangleVertexPositionBuffer = gl.createBuffer();\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, triangleVertexPositionBuffer);\r\n    var vertices = [\r\n         0.0,  1.0,  0.0,\r\n        -1.0, -1.0,  0.0,\r\n         1.0, -1.0,  0.0\r\n    ];\r\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(vertices), gl.STATIC_DRAW);\r\n    triangleVertexPositionBuffer.itemSize = 3;\r\n    triangleVertexPositionBuffer.numItems = 3;\r\n\r\n    squareVertexPositionBuffer = gl.createBuffer();\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, squareVertexPositionBuffer);\r\n    vertices = [\r\n         1.0,  1.0,  0.0,\r\n        -1.0,  1.0,  0.0,\r\n         1.0, -1.0,  0.0,\r\n        -1.0, -1.0,  0.0\r\n    ];\r\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array(vertices), gl.STATIC_DRAW);\r\n    squareVertexPositionBuffer.itemSize = 3;\r\n    squareVertexPositionBuffer.numItems = 4;\r\n  }\r\n\r\n  function drawScene() {\r\n    gl.viewport(0, 0, gl.viewportWidth, gl.viewportHeight);\r\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\r\n\r\n    mat4.perspective(45, gl.viewportWidth / gl.viewportHeight, 0.1, 100.0, pMatrix);\r\n\r\n    mat4.identity(mvMatrix);\r\n\r\n    mat4.translate(mvMatrix, [-1.5, 0.0, -7.0]);\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, triangleVertexPositionBuffer);\r\n    gl.vertexAttribPointer(shaderProgram.vertexPositionAttribute, triangleVertexPositionBuffer.itemSize, gl.FLOAT, false, 0, 0);\r\n    setMatrixUniforms();\r\n    gl.drawArrays(gl.TRIANGLES, 0, triangleVertexPositionBuffer.numItems);\r\n\r\n\r\n    mat4.translate(mvMatrix, [3.0, 0.0, 0.0]);\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, squareVertexPositionBuffer);\r\n    gl.vertexAttribPointer(shaderProgram.vertexPositionAttribute, squareVertexPositionBuffer.itemSize, gl.FLOAT, false, 0, 0);\r\n    setMatrixUniforms();\r\n    gl.drawArrays(gl.TRIANGLE_STRIP, 0, squareVertexPositionBuffer.numItems);\r\n  }\r\n\r\n  function webGLStart() {\r\n    var canvas = document.getElementById(\"lesson01-canvas\");\r\n    initGL(canvas);\r\n    initShaders();\r\n    initBuffers();\r\n\r\n    gl.clearColor(0.0, 0.0, 0.0, 1.0);\r\n    gl.enable(gl.DEPTH_TEST);\r\n\r\n    drawScene();\r\n  }\r\n</script>\r\n</head>\r\n\r\n<body onload=\"webGLStart();\">\r\n    <canvas id=\"lesson01-canvas\" style=\"border: none;\" width=\"500\" height=\"500\"></canvas><br/>\r\n</body>\r\n</html>"]],"start1":0,"start2":0,"length1":0,"length2":5256}]],"length":5256}
{"ts":1356127028487,"patch":[[{"diffs":[[0," Lessons"],[1,"\""],[0," 1</titl"]],"start1":47,"start2":47,"length1":16,"length2":17}]],"length":5257,"saved":false}
{"ts":1356127032215,"patch":[[{"diffs":[[0,"Lessons\""],[1,"Removing template pages"],[0," 1</titl"]],"start1":48,"start2":48,"length1":16,"length2":39}]],"length":5280,"saved":false}
{"ts":1356127033319,"patch":[[{"diffs":[[0,"te pages"],[1,"\""],[0," 1</titl"]],"start1":71,"start2":71,"length1":16,"length2":17}]],"length":5281,"saved":false}
